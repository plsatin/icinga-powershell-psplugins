object CheckCommand "Invoke-IcingaCheckDiskStatus" {
    import "PowerShell Base"

    arguments += {
        "-C" = {
            value = "try { Use-Icinga -Minimal; } catch { Write-Output 'The Icinga PowerShell Framework is either not installed on the system or not configured properly. Please check https://icinga.com/docs/windows for further details'; Write-Output 'Error:' $$($$_.Exception.Message)Components:`r`n$$( Get-Module -ListAvailable 'icinga-powershell-*' )`r`n'Module-Path:'`r`n$$($$Env:PSModulePath); exit 3; }; Exit-IcingaExecutePlugin -Command 'Invoke-IcingaCheckDiskStatus' "
            order = 0
        }
        "-ThresholdInterval" = {
            description = "Change the value your defined threshold checks against from the current value to a collected time threshold of the Icinga for Windows daemon, as described here: https://icinga.com/docs/icinga-for-windows/latest/doc/service/10-Register-Service-Checks/ An example for this argument would be 1m or 15m which will use the average of 1m or 15m for monitoring."
            value = "$IcingaCheckDiskStatus_String_ThresholdInterval$"
            order = 100
        }
        "-NoPerfData" = {
            set_if = "$IcingaCheckDiskStatus_Switchparameter_NoPerfData$"
            order = 99
        }
        "-Verbosity" = {
            value = "$IcingaCheckDiskStatus_Int32_Verbosity$"
            order = 2
        }
    }
    vars.IcingaCheckDiskStatus_Switchparameter_NoPerfData = false
}
